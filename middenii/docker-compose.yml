version: '3'
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.5
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory" # staging
      - "--certificatesresolvers.myhttpchallenge.acme.email=info@middenii.com"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"      
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./letsencrypt:/letsencrypt"

  zodiac_frontend:
    build:
      context: ./docker/zodiac/react
      dockerfile: Dockerfile
    container_name: "zodiac_frontend"
    tty: true
    volumes:
      - ./docker/react:/var/www/app
    working_dir: /var/www/app
    command: sh -c "npx webpack serve && /bin/sh"
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.frontend.rule=Host(`works.middenii.com`)  && PathPrefix(`/frontend`)"
      - "traefik.http.routers.frontend.rule=Host(`works.middenii.com`)"
      - "traefik.http.routers.frontend.tls=true" #sets the service to use 
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myhttpchallenge"
      - "traefik.http.routers.frontend.tls.domains[0].main=works.middenii.com" #optionally restrict domain
    # networks:
    #   - zodiac

  zodiac_backend:
    build:
      context: ./docker/zodiac/fastapi
      dockerfile: Dockerfile
    container_name: "zodiac_backend"
    volumes:
      - ./docker/fastapi.dockervenv:/src/.venv
      - ./docker/fastapi:/src
    expose:
      - "8000"  # ホストマシンのポート8000を、docker内のポート8000に接続する
    # networks:
    #   zodiac:
    #     aliases:
    #       - backend

# networks:
#   zodiac:
#     external: true


      